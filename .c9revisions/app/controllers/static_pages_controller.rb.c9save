{"ts":1374143233275,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#change var proxy value to \"\" if you are not behind a proxy server else use the proxy \n#and if your proxy server doesn't require a user name and password just use :proxy in place of :proxy_http_basic_authentication \n#and the \"proxy:port\" in the value instead of [\"proxy:port\", \"username\", \"password\"]\n\nclass StaticPagesController < ApplicationController\n\n  def home\n    require 'nokogiri'\n    require 'open-uri'\n    require 'json'\n    proxy = \"\"    \n\tif params[:search]\n\t\tif params[:type] == '2'\n\t\t    query = params[:search].to_s\n\t\t\turl = \"http://www.tastekid.com/like/#{CGI::escape(query)}/movies\"\n\t\t\tif (proxy == \"\")\n\t\t\t\tdoc = Nokogiri::HTML(open(url))\n\t\t\telse\n\t\t\t\tdoc = Nokogiri::HTML(open(url,:proxy_http_basic_authentication => [\"proxy:port\", \"username\", \"password\"]))\n\t\t\tend\n\t\t\tif (doc.at_css('.noresults'))\n\t\t\t\t@e = 1\n\t\t\telse\n\t\t\t\t@e = 0\n\t\t\tend\n\t\t\t @heading = doc.css(\".movies h2\").text  \n\t\t\t  doc.css(\".resourcelist span\").each do\n\t\t\t\t @simsearch = doc.css(\".resourcelist span\").map(&:text).join(\" | \")\n\t\t\t  end\n\t\t\t@similarities = @simsearch.split(\" | \")\n\t\t\ti = 0\n\t\t\t@simsearch_datatype = Array.new()\n\t\t\t@similarities.each do |each|\n\t\t     \t@simsearch_datatype[i] = 'm'\t\t\t\t\n\t\t\t\ti = i+1\n\t\t\t  end\n\t\tend\n\t\tif params[:type] == '3'\n\t\t\tquery = params[:search].to_s\n\t\t\turl = \"http://www.tastekid.com/like/#{CGI::escape(query)}/music\"\n\t\t\tif (proxy == \"\")\n\t\t\t\tdoc = Nokogiri::HTML(open(url))\n\t\t\telse\n\t\t\t\tdoc = Nokogiri::HTML(open(url,:proxy_http_basic_authentication => [\"proxy:port\", \"username\", \"password\"]))\n\t\t\tend\n\t\t\tif (doc.at_css('.noresults'))\n\t\t\t\t@e = 1\n\t\t\telse\n\t\t\t\t@e = 0\n\t\t\tend\n\t\t\t @heading = doc.css(\".music h2\").text  \n\t\t\t  doc.css(\".resourcelist span\").each do\n\t\t\t\t @simsearch = doc.css(\".resourcelist span\").map(&:text).join(\" | \")\n\t\t\t  end\n\t\t\t@similarities = @simsearch.split(\" | \")\n\t\t\ti = 0\n\t\t\t@simsearch_datatype = Array.new()\n\t\t\t@similarities.each do |each|\n\t\t     \t@simsearch_datatype[i] = 's'\t\t\t\t\n\t\t\t\ti = i+1\n\t\t\t  end\n\t\tend\n\t\tif params[:type] == '4'\n\t\t\tquery = params[:search].to_s\n\t\t\turl = \"http://www.tastekid.com/like/#{CGI::escape(query)}/books\"\n\t\t\tif (proxy == \"\")\n\t\t\t\tdoc = Nokogiri::HTML(open(url))\n\t\t\telse\n\t\t\t\tdoc = Nokogiri::HTML(open(url,:proxy_http_basic_authentication => [\"proxy:port\", \"username\", \"password\"]))\n\t\t\tend\n\t\t\tif (doc.at_css('.noresults'))\n\t\t\t\t@e = 1\n\t\t\telse\n\t\t\t\t@e = 0\n\t\t\tend\n\t\t\t @heading = doc.css(\".books h2\").text  \n\t\t\t  doc.css(\".resourcelist span\").each do\n\t\t\t\t @simsearch = doc.css(\".resourcelist span\").map(&:text).join(\" | \")\n\t\t\t  end\n\t\t\t@similarities = @simsearch.split(\" | \")\n\t\t\ti = 0\n\t\t\t@simsearch_datatype = Array.new()\n\t\t\t@similarities.each do |each|\n\t\t     \t@simsearch_datatype[i] = 'b'\t\t\t\t\n\t\t\t\ti = i+1\n\t\t\t  end\n\t\tend\n\t\tif params[:type] == '5'\n\t\t\tquery = params[:search].to_s\n\t\t\turl = \"http://www.tastekid.com/like/#{CGI::escape(query)}/authors\"\n\t\t\tif (proxy == \"\")\n\t\t\t\tdoc = Nokogiri::HTML(open(url))\n\t\t\telse\n\t\t\t\tdoc = Nokogiri::HTML(open(url,:proxy_http_basic_authentication => [\"proxy:port\", \"username\", \"password\"]))\n\t\t\tend\n\t\t\tif (doc.at_css('.noresults'))\n\t\t\t\t@e = 1\n\t\t\telse\n\t\t\t\t@e = 0\n\t\t\tend\n\t\t\t @heading = doc.css(\".authors h2\").text  \n\t\t\t  doc.css(\".resourcelist span\").each do\n\t\t\t\t @simsearch = doc.css(\".resourcelist span\").map(&:text).join(\" | \")\n\t\t\t  end\n\t\t\t@similarities = @simsearch.split(\" | \")\n\t\t\ti = 0\n\t\t\t@simsearch_datatype = Array.new()\n\t\t\t@similarities.each do |each|\n\t\t     \t@simsearch_datatype[i] = 'a'\t\t\t\t\n\t\t\t\ti = i+1\n\t\t\t  end\n\t\tend\n\t\tif params[:type] == '6'\n\t\t\tquery = params[:search].to_s\n\t\t\turl = \"http://www.tastekid.com/like/#{CGI::escape(query)}/shows\"\n\t\t\tif (proxy == \"\")\n\t\t\t\tdoc = Nokogiri::HTML(open(url))\n\t\t\telse\n\t\t\t\tdoc = Nokogiri::HTML(open(url,:proxy_http_basic_authentication => [\"proxy:port\", \"username\", \"password\"]))\n\t\t\tend\n\t\t\tif (doc.at_css('.noresults'))\n\t\t\t\t@e = 1\n\t\t\telse\n\t\t\t\t@e = 0\n\t\t\tend\n\t\t\t @heading = doc.css(\".shows h2\").text  \n\t\t\t  doc.css(\".resourcelist span\").each do\n\t\t\t\t @simsearch = doc.css(\".resourcelist span\").map(&:text).join(\" | \")\n\t\t\t  end\n\t\t\t@similarities = @simsearch.split(\" | \")\n\t\t\ti = 0\n\t\t\t@simsearch_datatype = Array.new()\n\t\t\t@similarities.each do |each|\n\t\t     \t@simsearch_datatype[i] = 'h'\t\t\t\t\n\t\t\t\ti = i+1\n\t\t\t  end\n\t\tend\n\t\tif params[:type] == '7'\n\t\t\tquery = params[:search].to_s\n\t\t\turl = \"http://www.tastekid.com/like/#{CGI::escape(query)}/games\"\n\t\t\tif (proxy == \"\")\n\t\t\t\tdoc = Nokogiri::HTML(open(url))\n\t\t\telse\n\t\t\t\tdoc = Nokogiri::HTML(open(url,:proxy_http_basic_authentication => [\"proxy:port\", \"username\", \"password\"]))\n\t\t\tend\n\t\t\tif (doc.at_css('.noresults'))\n\t\t\t\t@e = 1\n\t\t\telse\n\t\t\t\t@e = 0\n\t\t\tend\n\t\t\t @heading = doc.css(\".games h2\").text  \n\t\t\t  doc.css(\".resourcelist span\").each do\n\t\t\t\t @simsearch = doc.css(\".resourcelist span\").map(&:text).join(\" | \")\n\t\t\t  end\n\t\t\t@similarities = @simsearch.split(\" | \")\n\t\t\ti = 0\n\t\t\t@simsearch_datatype = Array.new()\n\t\t\t@similarities.each do |each|\n\t\t     \t@simsearch_datatype[i] = 'g'\t\t\t\t\n\t\t\t\ti = i+1\n\t\t\t  end\n\t\tend\n\t\tif params[:type] == '1'\n\t\t\tredirect_to root_path, :notice => \"Add a genre to the type of search.\"\n\t\tend\n\telsif params[:info]\n\t\tquery = params[:info].to_s\n\t\ttype = params[:type].to_s\n\t\turl = \"http://www.tastekid.com/ask/ws/info?q=#{CGI::escape(query)}&t=#{CGI::escape(type)}\"\n\t\tif (proxy == \"\")\n\t\t\tdoc = Nokogiri::HTML(open(url))\n\t\telse\n\t\t\tdoc = Nokogiri::HTML(open(url,:proxy_http_basic_authentication => [\"proxy:port\", \"username\", \"password\"]))\n\t\tend\n\t\t@info_json = doc.css(\"body\").text\n\t\t@info = JSON.parse(@info_json)\n\t\trespond_to do |format|\n\t\t    format.json { render :json => @info }\n\t\tend\n\telse\n\t\turl = \"http://www.tastekid.com/\"\n\t\tif (proxy == \"\")\n\t\t\t\tdoc = Nokogiri::HTML(open(url))\n\t\t\telse\n\t\t\t\tdoc = Nokogiri::HTML(open(url,:proxy_http_basic_authentication => [\"proxy:port\", \"username\", \"password\"]))\n\t\t\tend\n\t\t@heading = doc.css(\".resourcelist h2\").text\n\t\t@simsearch_datatype = Array.new()\n\t\tx = 0\n\t\tdoc.css(\".rsrc\").each do |link|\n\t\t     @simsearch_datatype[x] = link[\"data-type\"]\n\t\t     x = x+1\n\t\t  end\n\t\tdoc.css(\".rsrc span\").each do\n\t\t     @simsearch = doc.css(\".rsrc span\").map(&:text).join(\" | \")\n\t\t  end\n\t\t@similarities = @simsearch.split(\" | \")\n\t\t@e = 0\n\tend\n  end\n\n  def about\n  end\n\n  def help\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":6109}]],"length":6109}
